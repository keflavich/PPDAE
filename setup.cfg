[metadata]
name = ppdae
author = Jorge MartÃ­nez-Palomera and Zoie Telkamp, modified by Adam Ginsburg
author_email = 
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://github.com/keflavich/PPDAE
description = protoplanetary disk autoencoder
long_description = file: README.md
long_description_content_type = text/x-md
edit_on_github = False
github_project = keflavich/PPDAE

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    astropy
    astroquery
    scipy
    numpy
    matplotlib
    ghapi
    radio-beam
    spectral-cube
    regions
    reproject


[options.extras_require]
test =
    pytest-astropy
    astropy
    astroquery
    matplotlib
    scipy
    numpy
    ghapi
    radio-beam
    spectral-cube @ git+https://github.com/radio-astro-tools/spectral-cube.git@master
    regions
    reproject
docs =
    sphinx-astropy
all =
    astropy
    astroquery
    matplotlib
    scipy
    numpy
    ghapi
    radio-beam
    spectral-cube @ git+https://github.com/radio-astro-tools/spectral-cube.git@master
    regions
    reproject
    torch
    wandb
    torchvision
    scikit-learn
    seaborn

[options.package_data]
#ppdae = data/*

[options.entry_points]
console_scripts =
    ppdae_ae = ppdae.scripts.ae_main:main
    ppdae_vae = ppdae.scripts.vae_main:main

[tool:pytest]
testpaths = "ppdae"
astropy_header = true
text_file_format = rst

[coverage:run]
omit =
    ppdae/_astropy_init*
    ppdae/conftest.py
    ppdae/*setup_package*
    ppdae/tests/*
    ppdae/*/tests/*
    ppdae/extern/*
    ppdae/version*
    */ppdae/_astropy_init*
    */ppdae/conftest.py
    */ppdae/*setup_package*
    */ppdae/tests/*
    */ppdae/*/tests/*
    */ppdae/extern/*
    */ppdae/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
